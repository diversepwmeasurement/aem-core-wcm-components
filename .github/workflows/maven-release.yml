jobs:
  release:
    if: startsWith(github.ref, 'refs/heads/release/')
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 8
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      env:
        GPG_OWNERTRUST: ${{ secrets.GPG_OWNERTRUST }}
        GPG_SECRET_KEYS: ${{ secrets.GPG_SECRET_KEYS }}
      name: Import GPG key
      run: 'echo $GPG_SECRET_KEYS | base64 --decode | gpg --import --no-tty --batch
        --yes

        echo $GPG_OWNERTRUST | base64 --decode | gpg --import-ownertrust --no-tty
        --batch --yes

        '
    - continue-on-error: true
      env:
        X_GITHUB_USERNAME: ${{ secrets.ADOBE_BOT_GITHUB_USERNAME  }}
      name: Configure git user for release commits
      run: 'git config user.email "Grp-opensourceoffice@adobe.com"

        git config user.name "${X_GITHUB_USERNAME}"

        '
    - continue-on-error: true
      env:
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        X_GITHUB_PASSWORD: ${{ secrets.ADOBE_BOT_GITHUB_PASSWORD }}
        X_GITHUB_USERNAME: ${{ secrets.ADOBE_BOT_GITHUB_USERNAME  }}
      name: Deploy to Central Repository
      run: mvn -B -Prelease,cloud,ossrh,adobe-public -s ./.github/workflows/settings.xml
        clean release:prepare release:perform -DreleaseVersion=${{ github.event.inputs.releaseVersion
        }} -DdryRun=${{ github.event.inputs.dryRun }} -Dmaven.javadoc.failOnError=false
name: Release to OSSRH
on:
  repository_dispatch:
    types: trigger-ga___maven-release.yml
